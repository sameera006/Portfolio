---
title: "Introduction to Google Earth Engine"
---

## SUMMARY

This week we studied the much awaited Google Earth Engine abbreviated as **GEE**. "It is a cloud-based platform that makes it easy to access high-performance computing resources for processing very large Geo-spatial data sets. Its not just the speed but the results produced from GEE can be useful to researchers, policy makers, NGOs, field workers and wider public. Once an algorithm has been developed on Earth Engine, users can produce systematic data products or deploy interactive applications backed by Earth Engine's resources, without needing to be an expert in application development, web programming orÂ HTML." [@gorelick2017]

It is interacted with and managed through an **application programming interface** (API) and a web-based interactive development environment (IDE), allowing for quick prototyping and result visualization. So basically GEE can load large data sets within seconds instead of downloading the big heavy satellite imagery which we did during the first three weeks of our practicals. It consist of Data Catalog which all types of Satellite imagery.

GEE has a concept of **client** and **server** side where the code which we put runs on the client side i.e. Browser so we do not run anything locally which speeds up the process. It uses **Javascript** as the programming Language.

The raster data is called **image** and the vector data is called **feature**.

A stack of images is called **Image Collection** and Feature stack (lots of polygons) is known as **Feature Collection**.

![GEE Screen : [@googlefordevelopers]](images/ee-editor_1440.png){fig-align="center" width="800"}

This weeks practical was really interesting as we got to use GEE and all the things we did in previous week can be done in here with just few lines of code and without downloading any image.

We can make a new **point** and center the map to it in the **code editor**.

![code-chunk -GEE](images/code-chunk.png){width="800"}

So this code chunk will center the point to Delhi. For loading the imagery either Landsat or sentinel-1 or any other we can simply browse it and and load the data. Then we can add different layers, create a **filter** based on image and **reduce** it using **median reducer**. Mosaic the images, clip it and calculate different textures like Principal Component Analysis (**PCA**) and also calculate indices like **NDVI**.

![PCA Layer of New Delhi.](images/Screenshot%202024-03-17%20121636.png){fig-align="center" width="800"}

![Screenshot of GEE Screen showing NDVI layer.](images/ndvi-gee.png){fig-align="center" width="800"}

## APPLICATION

"As we know that GEE is a free platform which enable users to write open source code and which can be used by others with a single click. So thats the reason of its popularity and below graph shows the growth of GEE compared to other Geospatial Analysis tools since its launch being used in several journal articles." [@ballinger2024]

![](images/WoS%20Articles.png){fig-align="center" width="800"}

Here we can discuss some GEE applications along with several case studies

**Vegetation**-

The full archive of the Landsat imagery was processed within GEE to map the vegetation dynamics from 1988 to 2017 in Queensland, Australia [@xie2019]. Field observations were used to evaluate the performance of the proposed algorithm and an overall accuracy of 82.6% was reported. The authors emphasized the high computational efficiency of GEE compared to when they did the same analysis using traditional methods. The Image below accounts for different applications where GEE is used.

![GEE Applications[@amani2020]](images/GEE-Apllications.png){fig-align="center" width="800"}

There are very clear advantages of GEE with some limitation too as its a web based application.

![](images/Screenshot%202024-03-17%20120922.png){fig-align="center" width="800"}

[@amani2020]

Another study [@long2019] proposed an automatic method for producing a global annual burned area maps using all available Landsat images acquired between 2014 and 2015 within the GEE cloud computing platform. While according to [@hansen2013], it took 100 h to process 654 178 Landsat-7 images (707 terabytes) within GEE and produce a global map of forests otherwise without this the process would have taken a million hours to complete. Meanwhile as we go through the advantages of using GEE another paper from [@kumar2018] has done his research that see in many developing countries, the trend of publishing research output using GEE in most disciplines drops behind that for the developed nations. That's an interesting view point that developed nations are making full use of GEE compared to under development or developing nations.

## REFLECTION

Overall this week was quite anticipated from so long as everyone was waiting to learn GEE and how to use this tool and finally when we got to work on it. It seems pretty easy and straightforward. I think the processing time is very fast as we were able to finish the practical in class otherwise if we compare it with SNAP or even R we first need to download and sort out the imagery to do the analysis which took quite some time. Today we learn how to use the aggregate function like how to use the reduce function and calculate the mean, median and standard variation of the stack of images.

The platform has a learning curve, especially for those who haven't worked with JavaScript before. Additionally, it appears that extra code is necessary to add features like legends, as opposed to the more straightforward button-click approach in QGIS. Another point of confusion is that one must execute the entire script instead of running relevant code chunks individually. Hopefully, future updates will streamline this process.
